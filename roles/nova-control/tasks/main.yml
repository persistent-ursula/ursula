---
- include: novnc.yml
  tags: novnc

- name: install nova controller services
  upstart_service: name={{ item }} user=nova
                   cmd=/usr/local/bin/{{ item }}
                   config_dirs=/etc/nova
  with_items:
    - nova-api
    - nova-cert
    - nova-conductor
    - nova-consoleauth
    - nova-scheduler
    - nova-novncproxy

- name: install nova-quota-sync script
  copy: src=nova-quota-sync
        dest=/usr/local/sbin/nova-quota-sync
        mode=0755
        owner=root

- name: stop nova services before db sync
  service: name={{ item }} state=stopped
  with_items:
    - nova-api
    - nova-cert
    - nova-conductor
    - nova-consoleauth
    - nova-scheduler
    - nova-novncproxy
  when: database_create.changed or force_sync|default('false')|bool
  tags: db-migrate

- name: sync nova database
  command: nova-manage db sync
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify: restart nova services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: sync nova api database
  command: nova-manage api_db sync
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify: restart nova services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart nova services
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start nova controller services
  service: name={{ item }} state=started
  with_items:
    - nova-api
    - nova-cert
    - nova-conductor
    - nova-consoleauth
    - nova-scheduler
    - nova-novncproxy

- name: permit access to nova api
  ufw: rule=allow to_port={{ endpoints.nova.port.haproxy_api }} proto=tcp
  tags: ufw

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool
