---
- name: Check if glance user exists
  action: shell getent passwd glance
  register: glance_user
  failed_when: False
  changed_when: False

- name: glance user
  user: name=glance shell=/bin/false createhome=no
  when: glance_user|success

- name: glance user
  user: name=glance comment=glance shell=/bin/false system=yes home=/nonexistent createhome=no
  when: glance_user|failed

- name: /etc/glance
  file: dest=/etc/glance state=directory

- name: glance images dirs
  file:
    dest: "{{ item }}"
    state: directory
    owner: glance
    group: glance
  with_items:
    - "{{ glance.state_path }}/images"
    - "{{ glance.state_path }}/image-cache"

- name: glance cache dir
  file: dest=/var/cache/glance state=directory mode=0700 owner=glance
        group=glance

- name: glance log dir
  file: dest=/var/log/glance state=directory mode=2750 owner=glance group=adm

- name: Change glance log dir acl
  acl: name=/var/log/glance state=present default=yes etype={{ item.etype }} permissions={{ item.permission }}
  with_items:
    - etype: user
      permission: rw
    - etype: group
      permission: r
    - etype: other
      permission: r

- name: permit access to glance
  ufw: rule=allow to_port={{ item }} proto=tcp
  tags: ufw
  with_items:
    - "{{ endpoints.glance.port.haproxy_api }}"
    - "{{ endpoints.glance.port.backend_api }}"

- name: install glance services
  upstart_service: name={{ item }}
                   user=glance
                   cmd=/usr/local/bin/{{ item }}
  with_items:
    - glance-api
    - glance-registry

- name: glance config
  template: src={{ item }} dest=/etc/glance mode={{ 0644 if 'policy.json' in item else 0640 }}
            owner=glance group=glance
  with_fileglob: ../templates/etc/glance/*
  notify:
    - restart glance services

- name: stop glance services before db sync
  service: name={{ item }} state=stopped
  with_items:
    - glance-api
    - glance-registry
  when: database_create.changed or force_sync|default('false')|bool
  tags: db-migrate

- name: sync glance database
  command: glance-manage db_sync
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify:
    - restart glance services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- include: ceph_integration.yml
  when: ceph.enabled|bool

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart glance services
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start glance services
  service: name={{ item }} state=started
  with_items:
    - glance-api
    - glance-registry

- include: image-sync.yml
  when: glance.sync.enabled

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool

- include: logging.yml
  tags:
    - logrotate
    - logging
  when: logging.enabled|default('True')|bool

- include: serverspec.yml
  tags: 
    - serverspec
  when: serverspec.enabled|default('False')|bool
