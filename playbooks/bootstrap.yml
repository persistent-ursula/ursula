#
# This playbook boot straps an environment for network config and LVM
# partitioning
#
---
- hosts: all
  serial: 10

  vars:
    timezone: Etc/UTC
  environment: "{{ env_vars|default({}) }}"

  tasks:
  - name: disable apt sources
    lineinfile: 
      dest: /etc/apt/sources.list
      regexp: "^deb-src"
      state: absent

  - name: ensure pycurl on precise
    apt:
      pkg: python-pycurl
      update_cache: yes
    when: ansible_distribution_version == "12.04"

  - name: install basic packages for setup
    apt:
      pkg: "{{ item }}"
      update_cache: yes
    with_items:
    - vlan
    - ifenslave-2.6
    - ucarp
    tags: ["packages"]

  - name: do a dist upgrade
    apt:
      upgrade: dist

  - name: "Disable GRUB OS prober"
    lineinfile:
      dest: /etc/default/grub
      line: "GRUB_DISABLE_OS_PROBER=true"

  - name: Upgrade Kernel on precise
    apt:
      pkg: "{{ item }}"
    with_items:
    - linux-generic-lts-trusty
    - linux-tools-lts-trusty
    when: ansible_distribution_version == "12.04"

  - name: load vlan module
    lineinfile:
      dest: /etc/modules
      line: "8021q"
    when: ansible_distribution_version == "14.04"

  # related to this https://bugs.launchpad.net/ubuntu/+source/ifupdown/+bug/1337873
  - name: fix network on trusty
    lineinfile:
      dest: /etc/rc.local
      line: "ifdown -a; ifup -a"
      insertbefore: "^exit"
    when: ansible_distribution_version == "14.04"

  # Set Locale
  - name: Generate locales
    command: /usr/sbin/locale-gen en_US

  - name: set locale to en_US.UTF-8
    command: /usr/sbin/update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

  # Set Time zone
  - name: set /etc/localtime to desired timezone
    command: /bin/cp /usr/share/zoneinfo/{{ timezone }} /etc/localtime

  - name: set /etc/timezone to desired timezone
    copy:
      content: "{{ timezone }}"
      dest: /etc/timezone
      force: yes
      owner: root
      group: root
      mode: 0644

  - name: update tzdata
    command: /usr/sbin/dpkg-reconfigure --frontend noninteractive tzdata

  # Populate network configuration
  - name: write network configuration if one interface file
    copy:
      content: "{{ network_interfaces }}"
      dest: /etc/network/interfaces
      force: yes
      owner: root
      group: root
      mode: 0644
    when: network_interfaces is defined
    tags: network_config

  - name: remove any existing configurations
    file:
      path: /etc/network/interfaces.d
      state: absent
    tags:
      - network_config
      - danger

  - name: create interfaces.d directory if multiple interface files
    file:
      state: directory
      path: /etc/network/interfaces.d
      mode: 0755
    when: network_interfaces_d is defined
    tags: network_config

  - name: write network configuration if multiple interface files
    copy:
      content: "{{ item.contents }}"
      dest: /etc/network/interfaces.d/{{ item.filename }}
      force: yes
      owner: root
      group: root
      mode: 0644
    when: network_interfaces_d is defined
    with_items: network_interfaces_d
    tags: network_config

  # booting with new networking config so we can't wait for restart
  - command: shutdown -r now
    async: 0
    poll: 0
    failed_when: False
    tags:
      - network_config
      - danger
